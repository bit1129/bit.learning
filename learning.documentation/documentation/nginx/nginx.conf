user nginx nginx;
worker_processes 16;
worker_cpu_affinity 0000000000000001 0000000000000010 0000000000000100 0000000000001000 0000000000010000 0000000000100000 0000000001000000 0000000010000000 0000000100000000 0000001000000000 0000010000000000 0000100000000000 0001000000000000 0010000000000000 0100000000000000 1000000000000000;
worker_rlimit_nofile 65535;
error_log /export/Logs/nginx/logs/error.log crit;
pid /export/Logs/nginx/nginx.pid;

events {
    use epoll;
    multi_accept on; 
    worker_connections 65535;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
    charset utf-8;
    server_names_hash_bucket_size 128;
    client_header_buffer_size 32k;
    large_client_header_buffers 4 32k;
    client_max_body_size 64m;
    sendfile on;
    tcp_nopush     on;
    tcp_nodelay on;
    keepalive_timeout 10;
    client_header_timeout 10;
    client_body_timeout 10;
    reset_timedout_connection on;
    send_timeout 10;
    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;
    fastcgi_buffer_size 64k;
    fastcgi_buffers 4 64k;
    fastcgi_busy_buffers_size 128k;
    fastcgi_temp_file_write_size 128k;
    fastcgi_intercept_errors on;
    gzip on;
    gzip_min_length  1k;
    gzip_buffers     4 16k;
    gzip_http_version 1.0;
    gzip_comp_level 9;
    gzip_types       text/plain application/x-javascript text/css application/xml;
    gzip_vary on;

###access_log是全局配置，可以在server block中进行重新指定
access_log /export/Logs/nginx/logs/access.log;


    upstream abc {
        server 10.72.11.11:8085 weight=10 max_fails=2 fail_timeout=30s;
#        server 10.72.11.12:8085 weight=10 max_fails=2 fail_timeout=30s;
    }

    upstream def {
        #server 10.72.11.11:8086 weight=10 max_fails=2 fail_timeout=30s;
        server 10.72.11.12:8086 weight=10 max_fails=2 fail_timeout=30s;
    }

    upstream abc-test {
        server 10.72.11.14:8085 weight=10 max_fails=2 fail_timeout=30s;
        #server 10.72.11.12:8085 weight=10 max_fails=2 fail_timeout=30s;
    }

    upstream def-test {
        server 10.72.11.11:8086 weight=10 max_fails=2 fail_timeout=30s;
        #server 10.72.11.12:8086 weight=10 max_fails=2 fail_timeout=30s;
    }

    upstream jdbc {
        server 10.72.11.14:17070 weight=10 max_fails=2 fail_timeout=30s;
        server 10.72.11.15:17070 weight=10 max_fails=2 fail_timeout=30s;
    }

    upstream msn {
        #server 10.72.11.18:8081 weight=10 max_fails=2 fail_timeout=30s;
        server 10.72.11.18:8080 weight=10 max_fails=2 fail_timeout=30s;
        server 10.72.11.19:8080 weight=10 max_fails=2 fail_timeout=30s;
        #server 10.72.11.15:17070 weight=10 max_fails=2 fail_timeout=30s;
    }

    server {
        listen 80;
        server_name  abc.com;

        ###一个server可以指定多个location指令，这些location匹配的优先级如何定义？
        location / {
             proxy_read_timeout 300;
             proxy_connect_timeout 300;
             proxy_pass http://abc;
             proxy_set_header Host $host;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location ^~ /lighting/ {
             proxy_pass http://def;
             proxy_set_header Host $host;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location ^~ /kylin/ {
             proxy_pass http://jdbc;
             proxy_set_header Host $host;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    server {
        listen 80;
        server_name  testabc.com;

        location / {
             proxy_read_timeout 300;
             proxy_connect_timeout 300;
             proxy_pass http://abc-test;
             proxy_set_header Host $host;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location ^~ /lighting/ {
             proxy_pass http://def-test;
             proxy_set_header Host $host;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location ^~ /kylin/ {
             proxy_pass http://jdbc;
             proxy_set_header Host $host;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    server {
        listen 80;
        server_name  msn.com;

        location / {
             proxy_read_timeout 300;
             proxy_connect_timeout 300;
             proxy_pass http://msn;
             proxy_set_header Host $host;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    server {
        listen 80;
        server_name  msn.com2;

        location / {
             proxy_read_timeout 300;
             proxy_connect_timeout 300;
             proxy_pass http://msn;
             proxy_set_header Host $host;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

}

